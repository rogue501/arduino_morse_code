; rogue
; ExtraCredit
; Dec 12, 2020
; Binary Conversion by hand
;
; Note:
; I know that assembly would strip out the comments normally,
; I have left them in to track what I'm doing and make it easier,
; to see my work (using ; to denote comment)

; Main
1001 0100 0000 1110 ; call ActivateLED
0000 0000 0000 0100 ; Address
1001 0100 0000 1110 ; call SendID
0000 0000 0000 1001 ; Address

; ActivateLED
1110 0010 1110 0000 ; ldi r30, $20
1110 0000 1111 0000 ; ldi r31, $20
1011 1001 1110 0100 ; out 0x04, r30
1011 1001 1111 0101 ; out 0x05, r31
1001 0101 0000 1000 ; ret

; SendID
1001 0100 0000 1110 ; call Three
0000 0000 0001 1010 ; address
1001 0100 0000 1110 ; call Break
0000 0000 0111 1011 ; address
1001 0100 0000 1110 ; call Five
0000 0000 0010 1101 ; address
1001 0100 0000 1110 ; call Break
0000 0000 0111 1011 ; address
1001 0100 0000 1110 ; call Six
0000 0000 0100 0000 ; address
1001 0100 0000 1110 ; call Break
0000 0000 0111 1011 ; address
1001 0100 0000 1110 ; call Seven
0000 0000 0101 0011 ; address
1001 0100 0000 1110 ; call EndID
0000 0000 0110 0110 ; address
1100 1111 1110 1111  ; rjmp SendID

; Three
1001 0100 0000 1110 ; call Dot
0000 0000 1000 1101 ; address
1001 0100 0000 1110 ; call Space
0000 0000 1000 1000 ; address
1001 0100 0000 1110 ; call Dot
0000 0000 1000 1101 ; address
1001 0100 0000 1110 ; call Space
0000 0000 1000 1000 ; address
1001 0100 0000 1110 ; call Dot
0000 0000 1000 1101 ; address
1001 0100 0000 1110 ; call Space
0000 0000 1000 1000 ; address
1001 0100 0000 1110 ; call Dash
0000 0000 1001 0100 ; address
1001 0100 0000 1110 ; call Space
0000 0000 1000 1000 ; address
1001 0100 0000 1110 ; call Dash
0000 0000 1001 0100 ; address
1001 0101 0000 1000 ; ret

; Five
1001 0100 0000 1110 ; call Dot
0000 0000 1000 1101 ; address
1001 0100 0000 1110 ; call Space
0000 0000 1000 1000 ; address
1001 0100 0000 1110 ; call Dot
0000 0000 1000 1101 ; address
1001 0100 0000 1110 ; call Space
0000 0000 1000 1000 ; address
1001 0100 0000 1110 ; call Dot
0000 0000 1000 1101 ; address
1001 0100 0000 1110 ; call Space
0000 0000 1000 1000 ; address
1001 0100 0000 1110 ; call Dot
0000 0000 1000 1101 ; address
1001 0100 0000 1110 ; call Space
0000 0000 1000 1000 ; address
1001 0100 0000 1110 ; call Dot
0000 0000 1000 1101 ; address
1001 0100 0000 1110 ; call Space
1001 0101 0000 1000 ; ret

; Six
1001 0100 0000 1110 ; call Dash
0000 0000 1001 0100 ; address
1001 0100 0000 1110 ; call Space
0000 0000 1000 1000 ; address
1001 0100 0000 1110 ; call Dot
0000 0000 1000 1101 ; address
1001 0100 0000 1110 ; call Space
0000 0000 1000 1000 ; address
1001 0100 0000 1110 ; call Dot
0000 0000 1000 1101 ; address
1001 0100 0000 1110 ; call Space
0000 0000 1000 1000 ; address
1001 0100 0000 1110 ; call Dot
0000 0000 1000 1101 ; address
1001 0100 0000 1110 ; call Space
0000 0000 1000 1000 ; address
1001 0100 0000 1110 ; call Dot
0000 0000 1000 1101 ; address
1001 0101 0000 1000 ; ret

; Seven
1001 0100 0000 1110 ; call Dash
0000 0000 1001 0100 ; address
1001 0100 0000 1110 ; call Space
0000 0000 1000 1000 ; address
1001 0100 0000 1110 ; call Dash
0000 0000 1001 0100 ; address
1001 0100 0000 1110 ; call Space
0000 0000 1000 1000 ; address
1001 0100 0000 1110 ; call Dot
0000 0000 1000 1101 ; address
1001 0100 0000 1110 ; call Space
0000 0000 1000 1000 ; address
1001 0100 0000 1110 ; call Dot
0000 0000 1000 1101 ; address
1001 0100 0000 1110 ; call Space
0000 0000 1000 1000 ; address
1001 0100 0000 1110 ; call Dot
0000 0000 1000 1101 ; address
1001 0101 0000 1000 ; ret

; EndID
1001 0100 0000 1110 ; call Delay
0000 0000 1010 0110 ; address
1001 0100 0000 1110 ; call ClearDelay
0000 0000 1010 0011 ; address
1001 0100 0000 1110 ; call Delay
0000 0000 1010 0110 ; address
1001 0100 0000 1110 ; call ClearDelay
0000 0000 1010 0011 ; address
1001 0100 0000 1110 ; call Delay
0000 0000 1010 0110 ; address
1001 0100 0000 1110 ; call ClearDelay
0000 0000 1010 0011 ; address
1001 0100 0000 1110 ; call Delay
0000 0000 1010 0110 ; address
1001 0100 0000 1110 ; call ClearDelay
0000 0000 1010 0011 ; address
1001 0100 0000 1110 ; call Delay
0000 0000 1010 0110 ; address
1001 0100 0000 1110 ; call ClearDelay
0000 0000 1010 0011 ; address
1001 0101 0000 1000 ; ret

; Break
1001 0100 0000 1110 ; call Delay
0000 0000 1010 0110 ; address
1001 0100 0000 1110 ; call ClearDelay
0000 0000 1010 0011 ; address
1001 0100 0000 1110 ; call Delay
0000 0000 1010 0110 ; address
1001 0100 0000 1110 ; call ClearDelay
0000 0000 1010 0011 ; address
1001 0100 0000 1110 ; call Delay
0000 0000 1010 0110 ; address
1001 0100 0000 1110 ; call ClearDelay
0000 0000 1010 0011 ; address
1001 0101 0000 1000 ; ret

; Space
1001 0100 0000 1110 ; call Delay
0000 0000 1010 0110 ; address
1001 0100 0000 1110 ; call ClearDelay
0000 0000 1010 0011 ; address
1001 0101 0000 1000 ; ret

; Dot
1011 1001 1110 0101 ; out 0x05, r30
1001 0100 0000 1110 ; call Delay
0000 0000 1010 0110 ; address
1001 0100 0000 1110 ; call ClearDelay
0000 0000 1010 0011 ; address
1011 1001 1111 0101 ; out 0x05, r31
1001 0101 0000 1000 ; ret

; Dash
1011 1001 1110 0101 ; out 0x05, r30
1001 0100 0000 1110 ; call Delay
0000 0000 1010 0110 ; address
1001 0100 0000 1110 ; call ClearDelay
0000 0000 1010 0011 ; address
1001 0100 0000 1110 ; call Delay
0000 0000 1010 0110 ; address
1001 0100 0000 1110 ; call ClearDelay
0000 0000 1010 0011 ; address
1001 0100 0000 1110 ; call Delay
0000 0000 1010 0110 ; address
1001 0100 0000 1110 ; call ClearDelay
0000 0000 1010 0011 ; address
1011 1001 1111 0101 ; out 0x05, r31
1001 0101 0000 1000 ; ret

; ClearDelay
0010 0111 1010 1010 ; eor r26, r26
0010 0111 1011 1011 ; eor r27, r27
1001 0101 0000 1000 ; ret

; Delay
1001 0100 0000 1110 ; call OuterLoop
0000 0000 1010 1111 ; address
0010 0111 1000 1000 ; eor r24, r24
0010 0111 1001 1001 ; eor r25, r25
1110 0000 1011 0001 ; ldi r27, $01
0000 1111 1010 1011 ; add r26, r27
0011 0000 1010 1101 ; cpi r26 $0D
1111 0111 1100 0001 ; brbc 1, Delay
1001 0101 0000 1000 ; ret

; OuterLoop
1001 0100 0000 1110 ; call Loop1
0000 0000 1100 0100 ; address
1001 0100 0000 1110 ; call Loop2
0000 0000 1100 1001 ; address
1001 0100 0000 1110 ; call Loop3
0000 0000 1100 1110; address
1001 0100 0000 1110 ; call Loop4
0000 0000 1101 0011  ; address
0010 0111 0000 0000 ; eor r16, r16
0010 0111 0001 0001 ; eor r17, r17
0010 0111 0010 0010 ; eor r18, r18
0010 0111 0011 0011 ; eor r19, r19
0010 0111 0100 0100 ; eor r20, r20
0010 0111 0101 0101 ; eor r21, r21
0010 0111 0110 0110 ; eor r22, r22
0010 0111 0111 0111 ; eor r23, r23
1110 0000 1001 0001 ; ldi r25, $01
0000 1111 1000 1001 ; add r24, r25
0011 1111 1000 1111 ; cpi r24 $FF
1111 0111 0110 0001 ; brbc 1, OuterLoop
1001 0101 0000 1000 ; ret

; Loop1
1110 0000 0001 0001 ; ldi r17, $01
0000 1111 0000 0001 ; add r16, r17
0011 1111 0000 1111 ; cpi r16, $FF
1111 0111 1110 0001 ; brbc 1, Loop1
1001 0101 0000 1000 ; ret

; Loop2
1110 0000 0011 0001 ; ldi r19, $01
0000 1111 0010 0011 ; add r18, r19
0011 1111 0010 1111 ; cpi r18, $FF
1111 0111 1110 0001 ; brbc 1, Loop2
1001 0101 0000 1000 ; ret

; Loop3
1110 0000 0101 0001 ; ldi r21, $01
0000 1111 0100 0101 ; add r20, r21
0011 1111 0100 1111 ; cpi r20, $FF
1111 0111 1110 0001 ; brbc 1, Loop3
1001 0101 0000 1000 ; ret

; Loop4
1110 0000 0111 0001 ; ldi r23, $01
0000 1111 0110 0111 ; add r22, r23
0011 1111 0110 1111 ; cpi r22, $FF
1111 0111 1110 0001 ; brbc 1, Loop4
1001 0101 0000 1000 ; ret